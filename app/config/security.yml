# To get started with security, check out the documentation:
# http://symfony.com/doc/current/security.html
security:
    encoders:
        ColocMatching\CoreBundle\Entity\User\User:
            algorithm: bcrypt
            cost: 12
        Symfony\Component\Security\Core\User\User:
            algorithm: bcrypt
            cost: 12
            
    role_hierarchy:
        ROLE_SEARCH:        ROLE_USER
        ROLE_PROPOSAL:      ROLE_USER
        ROLE_API:           ROLE_USER
        ROLE_ADMIN:         ROLE_API
        ROLE_SUPER_ADMIN:   [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    # http://symfony.com/doc/current/security.html#b-configuring-how-users-are-loaded
    providers:
        in_memory:
            memory: 
                users:
                    admin:
                        password: $2y$12$U6FlAHLM8dbui/jodFtxCenGH6DkjWMlhClMBwwM9y1.XOZZjaAFa
                        roles: ['ROLE_ADMIN']
                    api:
                        password: $2y$12$J806gdD75kiQsXobwC1Me.ClxTp6G9OWyU69nN4hrwlJDPl0itEmy
                        roles: ['ROLE_API']

        coloc_matching.user_provider:
            id: coloc_matching.core.user_provider

    firewalls:
        # disables authentication for assets and the profiler, adapt it according to your needs
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
            
        rest_root:
            pattern: ^/rest/$
            stateless: true
            anonymous: true
            
        rest_auth:
            pattern: ^/rest/auth
            stateless: true
            anonymous: true
            form_login:
                check_path: /rest/auth-tokens
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
                require_previous_session: false

        rest_secure:
            pattern: ^/rest/.*
            stateless: true
            anonymous: true
            provider: coloc_matching.user_provider
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
            
        default:
            pattern: ^/
            http_basic: ~
            anonymous: true
            
    access_control:
        - { path: ^/api/doc, roles: ROLE_API }
        
        # REST API access control
        - { path: ^/rest/$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/rest/auth, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/rest/announcements/searches/$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/rest/announcements/$, roles: IS_AUTHENTICATED_ANONYMOUSLY, methods: [ "GET" ] }
        - { path: ^/rest/users/$, roles: IS_AUTHENTICATED_ANONYMOUSLY, methods: [ "GET", "POST" ] }
        - { path: ^/rest/, roles: IS_AUTHENTICATED_FULLY }
        
        # Administration access control
        - { path: ^/admin/, roles: ROLE_ADMIN }
        
        - { path: ^/$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
